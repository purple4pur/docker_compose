services:
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    restart: "unless-stopped"
    environment:
      CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN}"
    labels:
      traefik.enable: true

      traefik.http.middlewares.admin_auth.basicAuth.users: "${ADMIN_HTPASSWD}"
      traefik.http.middlewares.user_auth.basicAuth.users: "${USER_HTPASSWD}"

      traefik.http.middlewares.dashboard_redirect.redirectregex.regex: "^(?:https?:\\/\\/)?dashboard\\.${BASEURL_RE:?error}"
      traefik.http.middlewares.dashboard_redirect.redirectregex.replacement: "https://${BASEURL:?error}/dashboard" # should not add trailing slash

      traefik.http.routers.dashboard_redirect.rule: "Host(`dashboard.${BASEURL:?error}`)"
      traefik.http.routers.dashboard_redirect.entrypoints: "websecure"
      traefik.http.routers.dashboard_redirect.tls.certresolver: "cloudflare"
      traefik.http.routers.dashboard_redirect.service: "noop@internal"
      traefik.http.routers.dashboard_redirect.middlewares: "dashboard_redirect"

      traefik.http.routers.dashboard.rule: "Host(`${BASEURL:?error}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      traefik.http.routers.dashboard.entrypoints: "websecure"
      traefik.http.routers.dashboard.tls.certresolver: "cloudflare"
      traefik.http.routers.dashboard.service: "api@internal"
      traefik.http.routers.dashboard.middlewares: "admin_auth"
    networks:
      frontend:
    ports:
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/traefik.yaml:/etc/traefik/traefik.yaml:ro"
      - "./letsencrypt:/letsencrypt"

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    restart: "unless-stopped"
    labels:
      traefik.enable: true
      traefik.http.services.whoami.loadbalancer.server.port: "80"
      traefik.http.routers.whoami.rule: "Host(`whoami.${BASEURL:?error}`)"
      traefik.http.routers.whoami.entrypoints: "websecure"
      traefik.http.routers.whoami.tls.certresolver: "cloudflare"
      traefik.http.routers.whoami.service: "whoami"
    networks:
      frontend:

networks:
  frontend:
    external: true
